# Try to find all dependencies to build proprietary plugins
# Once done this will be defined:
#  PLUGIN_SUPPORT_FOUND        - System has support to build Proprietary Plugins
#  PLUGIN_SUPPORT_DEFINITIONS  - Definitions required to do a proper compile
#  PLUGIN_SUPPORT_INCLUDE_DIRS - The include directories
#  PLUGIN_SUPPORT_LIBRARIES    - The libraries needed
#  PLUGIN_SUPPORT_LIBRARY_DIR  - The libraries needed
# 
# Input: PLUGIN_SUPPORT_VERSION

find_package(PkgConfig)
pkg_check_modules(PC_CORE_SUPPORT @NAMESPACE@Core)
pkg_check_modules(PC_PLUGIN_SUPPORT @NAMESPACE@Plugins)

if(PC_CORE_SUPPORT_FOUND AND PC_PLUGIN_SUPPORT_FOUND)
    if(PLUGIN_SUPPORT_VERSION AND PC_PLUGIN_SUPPORT_VERSION)
        if ("${PLUGIN_SUPPORT_VERSION}" VERSION_GREATER "${PC_PLUGIN_SUPPORT_VERSION}")
            message(WARNING "Incorrect version, found ${PC_PLUGIN_SUPPORT_VERSION}, need at least ${PLUGIN_SUPPORT_VERSION}, please install correct version ${WPEFRAMEWORKPLUGINS_FIND_VERSION}")
            set(PLUGIN_SUPPORT_FOUND_TEXT "Found incorrect version")
            unset(PC_PLUGIN_SUPPORT_FOUND)
        endif()
    endif()
else()
    set(PLUGIN_SUPPORT_FOUND_TEXT "Not found")
endif()

if(PC_CORE_SUPPORT_FOUND AND PC_PLUGIN_SUPPORT_FOUND)
    set(PLUGIN_SUPPORT_DEFINITIONS "${PC_CORE_SUPPORT_CFLAGS_OTHER};${PC_PLUGIN_SUPPORT_CFLAGS_OTHER}")
    set(PLUGIN_SUPPORT_INCLUDE_DIR "${PC_CORE_SUPPORT_INCUDE_DIRS};${PC_PLUGIN_SUPPORT_INCLUDE_DIRS}")
    set(PLUGIN_SUPPORT_LIBRARIES   "${PC_CORE_SUPPORT_LIBRARIES};${PC_PLUGIN_SUPPORT_LIBRARIES}")
    set(PLUGIN_SUPPORT_LIBRARY_DIR "${PC_CORE_SUPPORT_LIBRARY_DIRS};${PC_PLUGIN_SUPPORT_LIBRARY_DIRS}")
endif()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(PLUGIN_SUPPORT DEFAULT_MSG
    PLUGIN_SUPPORT_LIBRARIES  PLUGIN_SUPPORT_INCLUDE_DIR)

mark_as_advanced(PLUGIN_SUPPORT_DEFINITIONS PLUGIN_SUPPORT_INCLUDE_DIR PLUGIN_SUPPORT_LIBRARIES PLUGIN_SUPPORT_LIBRARY_DIR)
