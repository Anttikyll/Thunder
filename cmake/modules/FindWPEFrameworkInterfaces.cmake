# - Try to find WPEFrameworkPlugins
# Once done this will define
#  WPEFRAMEWORKINTERFACES_FOUND - System has WPEFrameworkPlugins
#  WPEFRAMEWORKINTERFACES_INCLUDE_DIRS - The WPEFrameworkPlugins include directories
#  WPEFRAMEWORKINTERFACES_LIBRARIES - The libraries needed to use WPEFrameworkPlugins
#
# Be extremely careful! WPEFRAMEWORK_PLUGINS_INCLUDE_DIRS and WPEFRAMEWORKINTERFACES_LIBRARIES is already defined in
# WPEFramework/Source/plugins!!
# So here we purposely left one underscore away

find_package(PkgConfig)
pkg_check_modules(PC_WPEFRAMEWORKINTERFACES WPEFrameworkInterfaces)

if(PC_WPEFRAMEWORKINTERFACES_FOUND)
    if(WPEFRAMEWORKINTERFACES_FIND_VERSION AND PC_WPEFRAMEWORKINTERFACES_VERSION)
        if ("${WPEFRAMEWORKINTERFACES_FIND_VERSION}" VERSION_GREATER "${PC_WPEFRAMEWORKINTERFACES_VERSION}")
            message(WARNING "Incorrect version, found ${PC_WPEFRAMEWORKINTERFACES_VERSION}, need at least ${WPEFRAMEWORK_FIND_VERSION}, please install correct version ${WPEFRAMEWORKINTERFACES_FIND_VERSION}")
            set(WPEFRAMEWORKINTERFACES_FOUND_TEXT "Found incorrect version")
            unset(PC_WPEFRAMEWORKINTERFACES_FOUND)
        endif()
    endif()
else()
    set(WPEFRAMEWORKINTERFACES_FOUND_TEXT "Not found")
endif()

if(PC_WPEFRAMEWORKINTERFACES_FOUND)
    find_library(
        WPEFRAMEWORKINTERFACES_LIBRARY
        NAMES WPEFrameworkPlugins
        HINTS ${PC_WPEFRAMEWORKINTERFACES_LIBDIR} ${PC_WPEFRAMEWORKINTERFACES_LIBRARY_DIRS})


    if("${WPEFRAMEWORKINTERFACES_INCLUDE_DIRS}" STREQUAL "" OR "${WPEFRAMEWORKINTERFACES_LIBRARY}" STREQUAL "")
        set(WPEFRAMEWORKINTERFACES_FOUND_TEXT "Not found")
    else()
        set(WPEFRAMEWORKINTERFACES_FOUND_TEXT "Found")
    endif()
else()
    set(WPEFRAMEWORKINTERFACES_FOUND_TEXT "Not found")
endif()

if (WPEFRAMEWORK_VERBOSE_BUILD)
    message(STATUS "WPEFrameworkPlugins: ${WPEFRAMEWORKINTERFACES_FOUND_TEXT}")
    message(STATUS "  version      : ${PC_WPEFRAMEWORKINTERFACES_VERSION}")
    message(STATUS "  cflags       : ${PC_WPEFRAMEWORKINTERFACES_CFLAGS}")
    message(STATUS "  cflags other : ${PC_WPEFRAMEWORKINTERFACES_CFLAGS_OTHER}")
    message(STATUS "  include dirs : ${PC_WPEFRAMEWORKINTERFACES_INCLUDE_DIRS} ${PC_WPEFRAMEWORKINTERFACES_INCLUDEDIR}")
    message(STATUS "  lib dirs     : ${PC_WPEFRAMEWORKINTERFACES_LIBRARY_DIRS} ${PC_WPEFRAMEWORKINTERFACES_LIBDIR}")
    message(STATUS "  include dirs : ${WPEFRAMEWORKINTERFACES_INCLUDE_DIRS}")
    message(STATUS "  libs         : ${WPEFRAMEWORKINTERFACES_LIBRARY}")
endif()

set(WPEFRAMEWORKINTERFACES_DEFINITIONS ${PC_WPEFRAMEWORKINTERFACES_PLUGINS_CFLAGS_OTHER})
set(WPEFRAMEWORKINTERFACES_INCLUDE_DIR ${WPEFRAMEWORKINTERFACES_INCLUDE_DIRS})
set(WPEFRAMEWORKINTERFACES_LIBRARIES ${WPEFRAMEWORKINTERFACES_LIBRARY})
set(WPEFRAMEWORKINTERFACES_LIBRARY_DIRS ${PC_WPEFRAMEWORKINTERFACES_LIBRARY_DIRS})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(WPEFRAMEWORKPLUGINS DEFAULT_MSG
    WPEFRAMEWORKINTERFACES_LIBRARIES  WPEFRAMEWORKINTERFACES_INCLUDE_DIRS)

if(WPEFRAMEWORKINTERFACES_FOUND)
else()
    message(WARNING "Could not find WPEFrameworkPlugins")
endif()

mark_as_advanced(WPEFRAMEWORKINTERFACES_DEFINITIONS WPEFRAMEWORKINTERFACES_INCLUDE_DIRS WPEFRAMEWORKINTERFACES_LIBRARIES)
